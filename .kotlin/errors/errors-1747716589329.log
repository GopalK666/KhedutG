kotlin version: 2.1.0
error message: Incremental compilation failed: Data error (cyclic redundancy check)
java.lang.AssertionError: Data error (cyclic redundancy check)
	at org.jetbrains.kotlin.com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:83)
	at org.jetbrains.kotlin.com.intellij.openapi.diagnostic.Logger.error(Logger.java:436)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.catchCorruption(PersistentEnumeratorBase.java:672)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.doEnumerate(PersistentEnumeratorBase.java:265)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.tryEnumerate(PersistentEnumeratorBase.java:256)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.doGet(PersistentMapImpl.java:655)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.get(PersistentMapImpl.java:613)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.get(PersistentHashMap.java:196)
	at org.jetbrains.kotlin.incremental.storage.LazyStorage.get(LazyStorage.kt:76)
	at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.get(InMemoryStorage.kt:68)
	at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.get(PersistentStorage.kt:105)
	at org.jetbrains.kotlin.incremental.LookupStorage.get(LookupStorage.kt:99)
	at org.jetbrains.kotlin.incremental.BuildUtilKt.mapLookupSymbolsToFiles(buildUtil.kt:221)
	at org.jetbrains.kotlin.incremental.BuildUtilKt.mapLookupSymbolsToFiles$default(buildUtil.kt:212)
	at org.jetbrains.kotlin.incremental.DirtyFilesContainer.addByDirtySymbols(DirtyFilesContainer.kt:37)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:251)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:143)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.io.IOException: Data error (cyclic redundancy check)
	at java.base/sun.nio.ch.FileDispatcherImpl.pread0(Native Method)
	at java.base/sun.nio.ch.FileDispatcherImpl.pread(Unknown Source)
	at java.base/sun.nio.ch.IOUtil.readIntoNativeBuffer(Unknown Source)
	at java.base/sun.nio.ch.IOUtil.read(Unknown Source)
	at java.base/sun.nio.ch.IOUtil.read(Unknown Source)
	at java.base/sun.nio.ch.FileChannelImpl.readInternal(Unknown Source)
	at java.base/sun.nio.ch.FileChannelImpl.read(Unknown Source)
	at org.jetbrains.kotlin.com.intellij.util.io.DirectBufferWrapper.lambda$allocateAndLoadFileContent$1(DirectBufferWrapper.java:238)
	at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
	at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.executeOperation(ResilientFileChannel.java:71)
	at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeIdempotentOp(StorageLockContext.java:129)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.executeIdempotentOp(PagedFileStorage.java:145)
	at org.jetbrains.kotlin.com.intellij.util.io.DirectBufferWrapper.allocateAndLoadFileContent(DirectBufferWrapper.java:237)
	at org.jetbrains.kotlin.com.intellij.util.io.DirectBufferWrapper.<init>(DirectBufferWrapper.java:65)
	at org.jetbrains.kotlin.com.intellij.util.io.FilePageCache.allocateAndLoadPage(FilePageCache.java:542)
	at org.jetbrains.kotlin.com.intellij.util.io.FilePageCache.get(FilePageCache.java:238)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.doGetBufferWrapper(PagedFileStorage.java:458)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.getBufferWrapper(PagedFileStorage.java:430)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.getByteBuffer(PagedFileStorage.java:191)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.lockBuffer(IntToIntBtree.java:475)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.syncWithStore(IntToIntBtree.java:461)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.setAddress(IntToIntBtree.java:457)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.setAddress(IntToIntBtree.java:444)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeRootNode.syncWithStore(IntToIntBtree.java:126)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeRootNode.getNodeView(IntToIntBtree.java:131)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree.initAccessNodeView(IntToIntBtree.java:203)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree.get(IntToIntBtree.java:175)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.enumerateImpl(PersistentBTreeEnumerator.java:584)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.lambda$doEnumerate$0(PersistentEnumeratorBase.java:266)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.catchCorruption(PersistentEnumeratorBase.java:654)
	... 36 more


